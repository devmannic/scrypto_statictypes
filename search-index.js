var searchIndex = JSON.parse('{\
"scrypto_statictypes":{"doc":"Use explicit container types with Scrypto!  Leverage the …","t":[4,11,11,14,11,11,11,0,11,11,11,18,18,4,3,3,13,13,13,13,3,8,8,8,8,16,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,10,11,12,12,12,12],"n":["XRD","borrow","borrow_mut","declare_resource","fmt","from","into","prelude","try_from","try_into","type_id","ADDRESS","ADDRESS","Address","BucketOf","BucketRefOf","Component","Package","PublicKey","ResourceDef","ResourceOf","StaticResource","StaticResourceDecl","UncheckedInto","Unwrap","Value","VaultOf","WithInner","amount","authorize","authorize","authorize_with_auth","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","burn","burn","burn_with_auth","burn_with_auth","check","clone","clone_into","contains","declare_resource","decode_value","decode_value","decode_value","decode_value","decode_value","deref","deref","deref","deref_mut","deref_mut","deref_mut","describe","describe","describe","describe","describe","drop","drop","encode_value","encode_value","encode_value","encode_value","encode_value","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","get_nft_id","get_nft_ids","hash","into","into","into","into","into","is_component","is_empty","is_package","is_public_key","is_resource_def","mint","mint_nft","ne","new","new","present","put","put","resource_address","resource_def","resource_def","resource_def","take","take","take_all","take_all_with_auth","take_nft","take_nft","take_nft_with_auth","take_with_auth","to_owned","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_into","unwrap","unwrap","unwrap","unwrap","unwrap","with_bucket","with_inner","with_inner","0","0","0","0"],"q":["scrypto_statictypes","","","","","","","","","","","scrypto_statictypes::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","scrypto_statictypes::prelude::Address","","",""],"d":["","","","","","","","Convenience re-export of common members","","","","","","Represents an address.","","","Represents a component.","Represents a package.","Represents a public key","Represents a resource definition.","","","","","","","","","Returns the resource amount within the bucket.","Uses resources in this bucket as authorization for an …","This is a convenience method for using the contained …","This is a convenience method for using the contained …","","","","","","","","","","","Burns resource within this bucket.","Burns a bucket of resources.","Burns resource within this bucket.","Burns a bucket of resources.","Checks if the referenced bucket contains the given …","","","Checks if the referenced bucket contains the given …","","","","","","","","","","","","","","","","","","","Destroys this reference.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the NFT id and panic if not singleton.","Get the NFT ids in the referenced bucket.","","","","","","","","Checks if the referenced bucket is empty.","","","","Mints fungible resources","Mints non-fungible resources","","Creates a new bucket to hold resources of the given …","","Creates an immutable reference to this bucket.","Puts resources from another bucket into this bucket.","Puts a typed bucket of resources into this vault.","Returns the resource definition of resources within the …","Returns the resource definition of resources in this …","Returns the resource definition of resources within this …","Returns the resource definition of resources within the …","Takes some amount of resources from this bucket.","Takes some amount of resources out of this vault, with …","Takes all resourced stored in this vault, with typed …","Takes all resource stored in this vault.","Takes an NFT from this bucket, by id.","Takes an NFT from this vault, by id.","Takes an NFT from this vault, by id.","Takes some amount of resource from this vault into a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,0,1,1,1,0,1,1,1,2,2,0,0,0,3,3,3,3,0,0,0,0,0,4,0,0,5,6,7,7,6,7,8,5,3,6,7,8,5,3,6,8,6,8,5,3,3,5,0,6,7,8,5,3,6,7,8,6,7,8,6,7,8,5,3,5,5,6,7,8,5,3,3,6,7,8,5,3,3,6,6,7,7,8,8,5,5,3,3,3,3,3,3,5,5,3,6,7,8,5,3,3,5,3,3,3,8,8,3,6,7,6,6,7,5,6,7,5,6,7,7,7,6,7,7,7,3,3,3,6,7,8,5,3,3,6,7,8,5,3,6,6,7,7,8,8,5,5,3,3,9,4,6,7,8,5,7,10,5,11,12,13,14],"f":[null,[[]],[[]],null,[[["formatter",3]],["result",6]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["decimal",3]],[[["fnonce",8]]],[[["fnonce",8]]],[[["resource",8],["bucketrefof",3],["fnonce",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bucketof",3]]],[[["bucketrefof",3],["resource",8]]],[[["bucketrefof",3],["bucketof",3],["resource",8]]],[[["into",8,["resourcedef"]],["resourcedef",3]]],[[],["address",4]],[[]],[[["into",8,["resourcedef"]],["resourcedef",3]],["bool",15]],null,[[["decoder",3]],[["result",4,["decodeerror"]],["decodeerror",4]]],[[["decoder",3]],[["result",4,["decodeerror"]],["decodeerror",4]]],[[["decoder",3]],[["result",4,["decodeerror"]],["decodeerror",4]]],[[["decoder",3]],[["result",4,["decodeerror"]],["decodeerror",4]]],[[["decoder",3]],[["decodeerror",4],["address",4],["result",4,["address","decodeerror"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["type",4]],[[],["type",4]],[[],["type",4]],[[],["type",4]],[[],["type",4]],[[]],[[]],[[["encoder",3]]],[[["encoder",3]]],[[["encoder",3]]],[[["encoder",3]]],[[["encoder",3]]],[[["address",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["bucket",3]]],[[]],[[]],[[["vault",3]]],[[]],[[["resourcedef",3]]],[[]],[[["bucketref",3]]],[[["component",3]],["address",4]],[[["package",3]],["address",4]],[[]],[[["resourcedef",3]],["address",4]],[[["account",3]],["address",4]],[[["str",15]],[["result",4,["address"]],["address",4]]],[[],["u128",15]],[[],[["vec",3,["u128"]],["u128",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["decimal",3],["bucketrefof",3],["into",8,["decimal"]],["resource",8]],["bucketof",3]],[[["bucketrefof",3],["nftdata",8],["u128",15],["resource",8]],["bucketof",3]],[[["address",4]],["bool",15]],[[["into",8,["resourcedef"]],["resourcedef",3]]],[[["into",8,["resourcedef"]],["resourcedef",3]]],[[],["bucketrefof",3]],[[]],[[["bucketof",3]]],[[],["address",4]],[[],["resourceof",3]],[[],["resourceof",3]],[[],["resourceof",3]],[[["into",8,["decimal"]],["decimal",3]]],[[["into",8,["decimal"]],["decimal",3]],["bucketof",3]],[[],["bucketof",3]],[[["bucketrefof",3],["resource",8]],["bucketof",3]],[[["u128",15]],["bucketof",3]],[[["u128",15]],["bucketof",3]],[[["bucketrefof",3],["u128",15],["resource",8]],["bucketof",3]],[[["decimal",3],["bucketrefof",3],["into",8,["decimal"]],["resource",8]],["bucketof",3]],[[]],[[],["string",3]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["address",4],["result",4,["address"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u8",15]],[[],["typeid",3]],[[],["u8",15]],[[],["u8",15]],[[],["typeid",3]],[[],["typeid",3]],[[],["u8",15]],[[],["u8",15]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bucketof",3]],["vaultof",3]],[[["fnonce",8]]],[[["fnonce",8]]],null,null,null,null],"p":[[4,"XRD"],[8,"StaticResourceDecl"],[4,"Address"],[8,"Unwrap"],[3,"BucketRefOf"],[3,"BucketOf"],[3,"VaultOf"],[3,"ResourceOf"],[8,"UncheckedInto"],[8,"WithInner"],[13,"Package"],[13,"Component"],[13,"ResourceDef"],[13,"PublicKey"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};