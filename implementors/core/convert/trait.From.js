(function() {var implementors = {};
implementors["scrypto_statictypes"] = [{"text":"impl&lt;RES:&nbsp;<a class=\"trait\" href=\"scrypto_statictypes/prelude/trait.StaticResource.html\" title=\"trait scrypto_statictypes::prelude::StaticResource\">Resource</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"scrypto_statictypes/prelude/struct.BucketOf.html\" title=\"struct scrypto_statictypes::prelude::BucketOf\">BucketOf</a>&lt;RES&gt;&gt; for Bucket","synthetic":false,"types":["scrypto::resource::bucket::Bucket"]},{"text":"impl&lt;RES:&nbsp;Resource&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Bucket&gt; for <a class=\"struct\" href=\"scrypto_statictypes/prelude/struct.BucketOf.html\" title=\"struct scrypto_statictypes::prelude::BucketOf\">BucketOf</a>&lt;RES&gt;","synthetic":false,"types":["scrypto_statictypes::bucketof::BucketOf"]},{"text":"impl&lt;RES:&nbsp;<a class=\"trait\" href=\"scrypto_statictypes/prelude/trait.StaticResource.html\" title=\"trait scrypto_statictypes::prelude::StaticResource\">Resource</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"scrypto_statictypes/prelude/struct.BucketRefOf.html\" title=\"struct scrypto_statictypes::prelude::BucketRefOf\">BucketRefOf</a>&lt;RES&gt;&gt; for BucketRef","synthetic":false,"types":["scrypto::resource::bucket_ref::BucketRef"]},{"text":"impl&lt;RES:&nbsp;Resource&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;BucketRef&gt; for <a class=\"struct\" href=\"scrypto_statictypes/prelude/struct.BucketRefOf.html\" title=\"struct scrypto_statictypes::prelude::BucketRefOf\">BucketRefOf</a>&lt;RES&gt;","synthetic":false,"types":["scrypto_statictypes::bucketrefof::BucketRefOf"]},{"text":"impl&lt;RES:&nbsp;<a class=\"trait\" href=\"scrypto_statictypes/prelude/trait.StaticResource.html\" title=\"trait scrypto_statictypes::prelude::StaticResource\">Resource</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"scrypto_statictypes/prelude/struct.ResourceOf.html\" title=\"struct scrypto_statictypes::prelude::ResourceOf\">ResourceOf</a>&lt;RES&gt;&gt; for ResourceDef","synthetic":false,"types":["scrypto::resource::resource_def::ResourceDef"]},{"text":"impl&lt;RES:&nbsp;Resource&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ResourceDef&gt; for <a class=\"struct\" href=\"scrypto_statictypes/prelude/struct.ResourceOf.html\" title=\"struct scrypto_statictypes::prelude::ResourceOf\">ResourceOf</a>&lt;RES&gt;","synthetic":false,"types":["scrypto_statictypes::resourceof::ResourceOf"]},{"text":"impl&lt;RES:&nbsp;<a class=\"trait\" href=\"scrypto_statictypes/prelude/trait.StaticResource.html\" title=\"trait scrypto_statictypes::prelude::StaticResource\">Resource</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"scrypto_statictypes/prelude/struct.VaultOf.html\" title=\"struct scrypto_statictypes::prelude::VaultOf\">VaultOf</a>&lt;RES&gt;&gt; for Vault","synthetic":false,"types":["scrypto::resource::vault::Vault"]},{"text":"impl&lt;RES:&nbsp;Resource&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Vault&gt; for <a class=\"struct\" href=\"scrypto_statictypes/prelude/struct.VaultOf.html\" title=\"struct scrypto_statictypes::prelude::VaultOf\">VaultOf</a>&lt;RES&gt;","synthetic":false,"types":["scrypto_statictypes::vaultof::VaultOf"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()